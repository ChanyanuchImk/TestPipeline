name: CI/CD with Auto EC2 Create

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Ensure EC2 instance exists
        id: ec2
        run: |
          INSTANCE_ID=$(aws ec2 describe-instances \
            --filters "Name=tag:Project,Values=NoiseMap" "Name=instance-state-name,Values=running" \
            --query "Reservations[].Instances[].InstanceId" --output text)

          if [ -z "$INSTANCE_ID" ]; then
            echo "Creating new EC2..."
            INSTANCE_ID=$(aws ec2 run-instances \
              --image-id ami-0e731c8a588258d0d \
              --instance-type t3.micro \
              --iam-instance-profile Name="LabInstanceProfile" \
              --security-groups default \
              --tag-specifications 'ResourceType=instance,Tags=[{Key=Project,Value=NoiseMap}]' \
              --query "Instances[0].InstanceId" --output text)
            aws ec2 wait instance-status-ok --instance-ids $INSTANCE_ID
          else
            echo "EC2 already exists: $INSTANCE_ID"
          fi

          echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV

      - name: Upload compose & configs via SSM
        run: |
          echo "Sending NoiseMap files to EC2 via SSM"

          FILES_TO_SEND=$(tar czf - Noise_Map_tonkit.yaml nginx.conf frontend initialSQL.sql 2>/dev/null | base64)

          cat > ssm-input.json <<EOF
          {
            "InstanceIds": ["$INSTANCE_ID"],
            "DocumentName": "AWS-RunShellScript",
            "Comment": "Deploy NoiseMap via SSM",
            "Parameters": {
              "commands": [
                "mkdir -p ~/noisemap",
                "cd ~/noisemap",
                "echo '$FILES_TO_SEND' | base64 -d | tar xz",
                "sudo yum install -y docker",
                "sudo systemctl enable docker",
                "sudo systemctl start docker",
                "if ! command -v docker-compose &> /dev/null; then sudo curl -L 'https://github.com/docker/compose/releases/download/v2.27.1/docker-compose-linux-x86_64' -o /usr/local/bin/docker-compose && sudo chmod +x /usr/local/bin/docker-compose; fi",
                "cd ~/noisemap",
                "sudo docker compose -f Noise_Map_tonkit.yaml down || true",
                "sudo docker compose -f Noise_Map_tonkit.yaml up -d",
                "sudo docker compose -f Noise_Map_tonkit.yaml ps"
              ]
            }
          }
          EOF
          
          aws ssm send-command --cli-input-json file://ssm-input.json --output text
          
          echo "NoiseMap deployed on EC2 via SSM"
