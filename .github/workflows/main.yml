name: CI/CD Pipeline NoiseMap

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: fullstack-main
  cancel-in-progress: true

jobs:

  build-and-push:
    runs-on: ubuntu-latest
    needs: system-e2e
    steps:
      - uses: actions/checkout@v4

      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push BACKEND image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/myapp-backend:${{ github.sha }} ./backend
          docker tag  ${{ secrets.DOCKERHUB_USERNAME }}/myapp-backend:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/myapp-backend:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/myapp-backend:${{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/myapp-backend:latest

      - name: Build & push FRONTEND image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/myapp-frontend:${{ github.sha }} ./frontend
          docker tag  ${{ secrets.DOCKERHUB_USERNAME }}/myapp-frontend:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/myapp-frontend:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/myapp-frontend:${{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/myapp-frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy on EC2
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e
            cd ~/myapp

            echo "Pulling latest images..."
            docker compose pull

            echo "Recreating stack..."
            docker compose down
            docker compose up -d

            echo "Current status:"
            docker compose ps
          EOF
